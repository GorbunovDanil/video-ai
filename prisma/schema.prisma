generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RenderType {
  IMAGE
  VIDEO_PREVIEW
  VIDEO_FINAL
}

enum RenderStatus {
  QUEUED
  PROCESSING
  SUCCEEDED
  FAILED
}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  name       String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  projects   Project[]
  brandKits  BrandKit[]
}

model Project {
  id          String     @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  renders     Render[]
  brandKit    BrandKit?
}

model BrandKit {
  id                String    @id @default(cuid())
  project           Project?  @relation(fields: [projectId], references: [id])
  projectId         String?   @unique
  user              User      @relation(fields: [userId], references: [id])
  userId            String
  primaryColor      String?
  secondaryColor    String?
  accentColor       String?
  logoUrl           String?
  watermarkEnabled  Boolean   @default(true)
  typography        Json?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Render {
  id             String       @id @default(cuid())
  project        Project      @relation(fields: [projectId], references: [id])
  projectId      String
  type           RenderType
  status         RenderStatus @default(QUEUED)
  providerJobId  String?
  prompt         String
  instructions   Json?
  brandSettings  Json?
  inputAssets    Json?
  outputAssetUrl String?
  watermarkUrl   String?
  costInCredits  Float?
  usageMetadata  Json?
  error          String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
